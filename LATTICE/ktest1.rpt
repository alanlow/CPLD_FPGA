|--------------------------------------------------------------|
|- ispLEVER Classic 2.0.00.17.20.15 Fitter Report File        -|
|- Copyright(C), 1992-2012, Lattice Semiconductor Corporation -|
|- All Rights Reserved.                                       -|
|--------------------------------------------------------------|




The Basic/Detailed Report Format can be selected in the dialog box
Tools->Fitter Report File Format...

Project_Summary
~~~~~~~~~~~~~~~
Project Name         :  ktest1
Project Path         :  C:\Users\alanlow\Documents\GitHub\CPLD_FPGA\LATTICE
Project Fitted on    :  Fri May 01 16:36:36 2020

Device               :  M4064_32
Package              :  48
GLB Input Mux Size   :  10
Available Blocks     :  4
Speed                :  -5
Part Number          :  LC4064V-5T48I
Source Format        :  Pure_VHDL


// Project 'ktest1' Fit Successfully! //


Compilation_Times
~~~~~~~~~~~~~~~~~
Prefit Time                     0 secs
Load Design Time                0.05 secs
Partition Time                  0.03 secs
Place Time                      0.00 secs
Route Time                      0.00 secs
Total Fit Time                  00:00:01


Design_Summary
~~~~~~~~~~~~~~
Total Input Pins                9
Total Logic Functions           34
  Total Output Pins             8
  Total Bidir I/O Pins          0
  Total Buried Nodes            26
Total Flip-Flops                25
  Total D Flip-Flops            9
  Total T Flip-Flops            16
  Total Latches                 0
Total Product Terms             97

Total Reserved Pins             0
Total Locked Pins               17
Total Locked Nodes              0

Total Unique Output Enables     0
Total Unique Clocks             2
Total Unique Clock Enables      0
Total Unique Resets             1
Total Unique Presets            0

Fmax Logic Levels               2


Device_Resource_Summary
~~~~~~~~~~~~~~~~~~~~~~~
                                 Device
                                 Total    Used   Not Used   Utilization
-----------------------------------------------------------------------
Dedicated Pins
  Clock/Input Pins                  4        3      1    -->    75
  I/O / Enable Pins                 2        1      1    -->    50
I/O Pins                           30       13     17    -->    43
Logic Functions                    64       34     30    -->    53
  Input Registers                  32        0     32    -->     0

GLB Inputs                        144       55     89    -->    38
Logical Product Terms             320       48    272    -->    15
Occupied GLBs                       4        4      0    -->   100
Macrocells                         64       34     30    -->    53

Control Product Terms:
  GLB Clock/Clock Enables           4        4      0    -->   100
  GLB Reset/Presets                 4        0      4    -->     0
  Macrocell Clocks                 64        0     64    -->     0
  Macrocell Clock Enables          64        0     64    -->     0
  Macrocell Enables                64        0     64    -->     0
  Macrocell Resets                 64        0     64    -->     0
  Macrocell Presets                64        0     64    -->     0

Global Routing Pool               100       35     65    -->    35
  GRP from IFB                     ..        9     ..    -->    ..
    (from input signals)           ..        9     ..    -->    ..
    (from output signals)          ..        0     ..    -->    ..
    (from bidir signals)           ..        0     ..    -->    ..
  GRP from MFB                     ..       26     ..    -->    ..
----------------------------------------------------------------------

<Note> 1 : The available PT is the product term that has not been used.
<Note> 2 : IFB is I/O feedback.
<Note> 3 : MFB is macrocell feedback.



GLB_Resource_Summary
~~~~~~~~~~~~~~~~~~~~
                                                                                     # of PT
               ---  Fanin  ---    I/O    Input  Macrocells       Macrocells   Logic  clusters
             Unique Shared Total  Pins    Regs Used Inaccessible  available    PTs   used
-------------------------------------------------------------------------------------------
Maximum
  GLB                      36      *(1)     8   --     --             16       80       16
-------------------------------------------------------------------------------------------
  GLB    A      4     5     9      2/8      0    4      0             12        7        4
  GLB    B      5     1     6      6/8      0    4      0             12        5        4
  GLB    C      2    11    13      4/8      0   12      0              4       16       12
  GLB    D      3    24    27      1/8      0   14      0              2       20       14
-------------------------------------------------------------------------------------------
TOTALS:        14    41    55     13/32     0   34      0             30       48       34

<Note> 1 : For ispMACH 4000 devices, the number of IOs depends on the GLB.
<Note> 2 : Four rightmost columns above reflect last status of the placement process.



GLB_Control_Summary
~~~~~~~~~~~~~~~~~~~
           Shared Shared | Mcell  Mcell  Mcell  Mcell  Mcell 
           Clk/CE Rst/Pr | Clock  CE     Enable Reset  Preset
------------------------------------------------------------------------------
Maximum
  GLB        1      1        16     16     16     16     16  
==============================================================================
  GLB    A   1      0         0      0      0      0      0
  GLB    B   1      0         0      0      0      0      0
  GLB    C   1      0         0      0      0      0      0
  GLB    D   1      0         0      0      0      0      0
------------------------------------------------------------------------------

<Note> 1 : For ispMACH 4000 devices, the number of output enables depends on the GLB.



Optimizer_and_Fitter_Options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Pin Assignment :                       Yes
Group Assignment :                     No
Pin Reservation :                      No

@Ignore_Project_Constraints :
  Pin Assignments :                    No
      Keep Block Assignment            --
      Keep Segment Assignment          --
  Group Assignments :                  No
  Macrocell Assignment :               No
      Keep Block Assignment            --
      Keep Segment Assignment          --

@Backannotate_Project_Constraints
  Pin Assignments :                    No
  Pin And Block Assignments :          No
  Pin, Macrocell and Block :           No

@Timing_Constraints :                  No

@Global_Project_Optimization :
  Balanced Partitioning :              Yes
  Spread Placement :                   Yes

  Note :
    Pack Design :
       Balanced Partitioning = No
       Spread Placement      = No
    Spread Design :
       Balanced Partitioning = Yes
       Spread Placement      = Yes


@Logic_Synthesis :
  Logic Reduction :                    Yes
  Node Collapsing :                    FMAX
  Fmax_Logic_Level :                   1
  D/T Synthesis :                      Yes
  XOR Synthesis :                      Yes
  Max. P-Term for Collapsing :         16
  Max. P-Term for Splitting :          80
  Max Symbols :                        24

@Utilization_options
  Max. % of Macrocells used :          100
@Usercode                               (HEX)
@IO_Types                              Default = LVCMOS18 (2)
@Output_Slew_Rate                      Default = FAST (2)
@Power                                 Default = HIGH (2)
@Pull                                  Default = PULLUP_UP (2)
@Fast_Bypass                           Default = None (2)
@ORP_Bypass                            Default = None
@Input_Registers                       Default = None (2)
@Register_Powerup                      Default = None

Device Options:
<Note> 1 : Reserved unused I/Os can be independently driven to Low or High, and does not
           follow the drive level set for the Global Configure Unused I/O Option.
<Note> 2 : For user-specified constraints on individual signals, refer to the Output,
           Bidir and Buried Signal Lists.



Pinout_Listing
~~~~~~~~~~~~~~
      | Pin   | Bank |GLB |Assigned|                 | Signal|
Pin No| Type  |Number|Pad |Pin     |     I/O Type    | Type  | Signal name
--------------------------------------------------------------------------------------------
1     | TDI   |   -  |    |        |                 |       |
2     |  I_O  |   0  |A10 |        |                 |       |
3     |  I_O  |   0  |A12 |        |                 |       |
4     |  I_O  |   0  |A14 |        |                 |       |
5     |GNDIO0 |   -  |    |        |                 |       |
6     |VCCIO0 |   -  |    |        |                 |       |
7     |  I_O  |   0  |B0  |    *   |LVCMOS18         | Output|adc_sel1
8     |  I_O  |   0  |B2  |        |                 |       |
9     |  I_O  |   0  |B4  |    *   |LVCMOS18         | Input |pps_rstn
10    |  I_O  |   0  |B6  |    *   |LVCMOS18         | Output|adc_clk1
11    | TCK   |   -  |    |        |                 |       |
12    | VCC   |   -  |    |        |                 |       |
13    | GND   |   -  |    |        |                 |       |
14    |  I_O  |   0  |B8  |    *   |LVCMOS18         | Input |cpld_seln
15    |  I_O  |   0  |B10 |    *   |LVCMOS18         | Input |cpld_sdi
16    |  I_O  |   0  |B12 |        |                 |       |
17    |  I_O  |   0  |B14 |    *   |LVCMOS18         | Output|cpld_sdo
18    |INCLK1 |   0  |    |    *   |LVCMOS18         | Input |adc_dclk
19    |INCLK2 |   1  |    |    *   |LVCMOS18         | Input |adc_drdyn
20    |  I_O  |   1  |C0  |        |                 |       |
21    |  I_O  |   1  |C2  |    *   |LVCMOS18         | Output|spi_clk
22    |  I_O  |   1  |C4  |    *   |LVCMOS18         | Output|spi_mosi
23    |  I_O  |   1  |C6  |    *   |LVCMOS18         | Input |spi_miso
24    |  I_O  |   1  |C8  |    *   |LVCMOS18         | Input |cpld_clk
25    | TMS   |   -  |    |        |                 |       |
26    |  I_O  |   1  |C10 |        |                 |       |
27    |  I_O  |   1  |C12 |        |                 |       |
28    |  I_O  |   1  |C14 |        |                 |       |
29    |GNDIO1 |   -  |    |        |                 |       |
30    |VCCIO1 |   -  |    |        |                 |       |
31    |  I_O  |   1  |D0  |        |                 |       |
32    |  I_O  |   1  |D2  |        |                 |       |
33    |  I_O  |   1  |D4  |        |                 |       |
34    |  I_O  |   1  |D6  |        |                 |       |
35    | TDO   |   -  |    |        |                 |       |
36    | VCC   |   -  |    |        |                 |       |
37    | GND   |   -  |    |        |                 |       |
38    |  I_O  |   1  |D8  |        |                 |       |
39    |  I_O  |   1  |D10 |    *   |LVCMOS18         | Output|freq_clka
40    |  I_O  |   1  |D12 |        |                 |       |
41    | I_O/OE|   1  |D14 |        |                 |       |
42    |INCLK3 |   1  |    |        |                 |       |
43    |INCLK0 |   0  |    |    *   |LVCMOS18         | Input |mcu_clko
44    | I_O/OE|   0  |A0  |    *   |LVCMOS18         | Output|adc_sel0
45    |  I_O  |   0  |A2  |    *   |LVCMOS18         | Output|adc_clk0
46    |  I_O  |   0  |A4  |        |                 |       |
47    |  I_O  |   0  |A6  |        |                 |       |
48    |  I_O  |   0  |A8  |    *   |LVCMOS18         | Input |rxd_1v8
--------------------------------------------------------------------------------------------

<Note> GLB Pad : This notation refers to the GLB I/O pad number in the device.
<Note> Assigned Pin : user or dedicated input assignment (E.g. Clock pins).
<Note> Pin Type : 
          ClkIn : Dedicated input or clock pin 
           CLK  : Dedicated clock pin
           I_O  : Input/Output pin
           INP  : Dedicated input pin
           JTAG : JTAG Control and test pin
           NC   : No connected



Input_Signal_List
~~~~~~~~~~~~~~~~~
                Input
         Pin    Fanout
 Pin GLB Type           Pullup Signal
----------------------------------------
  18  -- INCLK  2 AB--      Up adc_dclk
  19  -- INCLK  2 AB--      Up adc_drdyn
  24   C  I/O   1 --C-      Up cpld_clk
  15   B  I/O   1 --C-      Up cpld_sdi
  14   B  I/O   1 -B--      Up cpld_seln
  43  -- INCLK  1 ---D      Up mcu_clko
   9   B  I/O   3 A-CD      Up pps_rstn
  48   A  I/O   3 A-CD      Up rxd_1v8
  23   C  I/O   1 -B--      Up spi_miso
----------------------------------------



Output_Signal_List
~~~~~~~~~~~~~~~~~~
          I         C      P R P       O Output
          N         L Mc   R E U C O F B Fanout
 Pin GLB  P LL PTs  S Type E S P E E P P         Slew Pullup Signal
----------------------------------------------------------------------
  45   A  1  1   1  1 COM                  ----  Fast     Up adc_clk0
  10   B  1  1   1  1 COM                  ----  Fast     Up adc_clk1
  44   A  1  1   1  1 COM                  ----  Fast     Up adc_sel0
   7   B  1  1   1  1 COM                  ----  Fast     Up adc_sel1
  17   B  3  1   2  1 COM                  ----  Fast     Up cpld_sdo
  39   D  1  1   1  1 COM                  ----  Fast     Up freq_clka
  21   C  1  1   1  1 COM                  ----  Fast     Up spi_clk
  22   C  1  1   1  1 COM                  ----  Fast     Up spi_mosi
----------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        FP = Fast path used
       OBP = ORP bypass used



Bidir_Signal_List
~~~~~~~~~~~~~~~~~
          I         C      P R P       O Bidir
          N         L Mc   R E U C O F B Fanout
 Pin GLB  P LL PTs  S Type E S P E E P P         Slew Pullup Signal
-------------------------------------------------------------------
-------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        FP = Fast path used
       OBP = ORP bypass used



Buried_Signal_List
~~~~~~~~~~~~~~~~~~
        I         C      P R P       Node
        N         L Mc   R E U C I F Fanout
Mc GLB  P LL PTs  S Type E S P E R P         Signal
--------------------------------------------------------------------------
12   C  9  -   1  1 COM              2 A--D  n151
 5   C  3  1   1  1 DFF    * R       2 --CD  pps_counter__temp_pcnt_5__i0
 3   C  4  1   2  1 DFF    * R       2 --CD  pps_counter__temp_pcnt_5__i1
 6   A  5  2   3  1 DFF    * R       2 A--D  pps_counter__temp_pcnt_5__i10
 2   D  6  2   4  1 DFF    * R       2 A--D  pps_counter__temp_pcnt_5__i11
10   A  7  2   2  1 DFF    * R       2 A--D  pps_counter__temp_pcnt_5__i12
 4   D 15  1   1  1 TFF    * R       1 ---D  pps_counter__temp_pcnt_5__i13
 5   D 16  1   1  1 TFF    * R       1 ---D  pps_counter__temp_pcnt_5__i14
 6   D 17  1   1  1 TFF    * R       1 ---D  pps_counter__temp_pcnt_5__i15
 7   D 18  1   1  1 TFF    * R       1 ---D  pps_counter__temp_pcnt_5__i16
 8   D 19  1   1  1 TFF    * R       1 ---D  pps_counter__temp_pcnt_5__i17
 9   D 20  1   1  1 TFF    * R       1 ---D  pps_counter__temp_pcnt_5__i18
10   D 21  1   1  1 TFF    * R       1 ---D  pps_counter__temp_pcnt_5__i19
 0   C  5  1   3  1 DFF    * R       2 --CD  pps_counter__temp_pcnt_5__i2
11   D 22  1   1  1 TFF    * R       1 ---D  pps_counter__temp_pcnt_5__i20
12   D 23  1   1  1 TFF    * R       1 ---D  pps_counter__temp_pcnt_5__i21
13   D 24  1   1  1 TFF    * R       1 ---D  pps_counter__temp_pcnt_5__i22
 3   D 25  1   1  1 TFF    * R       1 -B--  pps_counter__temp_pcnt_5__i23
 1   D  6  1   4  1 DFF    * R       2 --CD  pps_counter__temp_pcnt_5__i3
 1   C  7  1   2  1 DFF    * R       2 --CD  pps_counter__temp_pcnt_5__i4
 6   C  7  1   1  1 TFF    * R       2 --CD  pps_counter__temp_pcnt_5__i5
 7   C  8  1   1  1 TFF    * R       2 --CD  pps_counter__temp_pcnt_5__i6
 8   C  9  1   1  1 TFF    * R       2 --CD  pps_counter__temp_pcnt_5__i7
 9   C 10  1   1  1 TFF    * R       2 --CD  pps_counter__temp_pcnt_5__i8
10   C 11  1   1  1 TFF    * R       2 A--D  pps_counter__temp_pcnt_5__i9
10   B  2  1   1  1 DFF      R       1 -B--  spi_module__spi_cntr_vPcnt_i0
--------------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        IR = Input register
        FP = Fast path used
       OBP = ORP bypass used



PostFit_Equations
~~~~~~~~~~~~~~~~~
adc_clk0 = adc_dclk ; (1 pterm, 1 signal)

adc_clk1 = adc_dclk ; (1 pterm, 1 signal)

adc_sel0 = adc_drdyn ; (1 pterm, 1 signal)

adc_sel1 = adc_drdyn ; (1 pterm, 1 signal)

cpld_sdo = cpld_seln & spi_miso
    # !cpld_seln & spi_module__spi_cntr_vPcnt_i0.Q ; (2 pterms, 3 signals)

freq_clka = mcu_clko ; (1 pterm, 1 signal)

n151 = pps_counter__temp_pcnt_5__i0.Q & pps_counter__temp_pcnt_5__i1.Q
       & pps_counter__temp_pcnt_5__i2.Q & pps_counter__temp_pcnt_5__i3.Q
       & pps_counter__temp_pcnt_5__i4.Q & pps_counter__temp_pcnt_5__i5.Q
       & pps_counter__temp_pcnt_5__i6.Q & pps_counter__temp_pcnt_5__i7.Q
       & pps_counter__temp_pcnt_5__i8.Q ; (1 pterm, 9 signals)

pps_counter__temp_pcnt_5__i0.D = !pps_counter__temp_pcnt_5__i0.Q ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i0.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i0.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i1.D = pps_counter__temp_pcnt_5__i0.Q
       & !pps_counter__temp_pcnt_5__i1.Q
    # !pps_counter__temp_pcnt_5__i0.Q & pps_counter__temp_pcnt_5__i1.Q ; (2 pterms, 2 signals)
pps_counter__temp_pcnt_5__i1.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i1.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i10.D = pps_counter__temp_pcnt_5__i9.Q
       & !pps_counter__temp_pcnt_5__i10.Q & n151
    # !pps_counter__temp_pcnt_5__i9.Q & pps_counter__temp_pcnt_5__i10.Q
    # pps_counter__temp_pcnt_5__i10.Q & !n151 ; (3 pterms, 3 signals)
pps_counter__temp_pcnt_5__i10.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i10.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i11.D = pps_counter__temp_pcnt_5__i9.Q
       & pps_counter__temp_pcnt_5__i10.Q & !pps_counter__temp_pcnt_5__i11.Q
       & n151
    # !pps_counter__temp_pcnt_5__i10.Q & pps_counter__temp_pcnt_5__i11.Q
    # !pps_counter__temp_pcnt_5__i9.Q & pps_counter__temp_pcnt_5__i11.Q
    # pps_counter__temp_pcnt_5__i11.Q & !n151 ; (4 pterms, 4 signals)
pps_counter__temp_pcnt_5__i11.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i11.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i12.D.X1 = pps_counter__temp_pcnt_5__i9.Q
       & pps_counter__temp_pcnt_5__i10.Q & pps_counter__temp_pcnt_5__i11.Q
       & n151 ; (1 pterm, 4 signals)
pps_counter__temp_pcnt_5__i12.D.X2 = pps_counter__temp_pcnt_5__i12.Q ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i12.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i12.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i13.T = pps_counter__temp_pcnt_5__i0.Q
       & pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i2.Q
       & pps_counter__temp_pcnt_5__i3.Q & pps_counter__temp_pcnt_5__i4.Q
       & pps_counter__temp_pcnt_5__i5.Q & pps_counter__temp_pcnt_5__i6.Q
       & pps_counter__temp_pcnt_5__i7.Q & pps_counter__temp_pcnt_5__i8.Q
       & pps_counter__temp_pcnt_5__i9.Q & pps_counter__temp_pcnt_5__i10.Q
       & pps_counter__temp_pcnt_5__i11.Q & pps_counter__temp_pcnt_5__i12.Q ; (1 pterm, 13 signals)
pps_counter__temp_pcnt_5__i13.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i13.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i14.T = pps_counter__temp_pcnt_5__i0.Q
       & pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i2.Q
       & pps_counter__temp_pcnt_5__i3.Q & pps_counter__temp_pcnt_5__i4.Q
       & pps_counter__temp_pcnt_5__i5.Q & pps_counter__temp_pcnt_5__i6.Q
       & pps_counter__temp_pcnt_5__i7.Q & pps_counter__temp_pcnt_5__i8.Q
       & pps_counter__temp_pcnt_5__i9.Q & pps_counter__temp_pcnt_5__i10.Q
       & pps_counter__temp_pcnt_5__i11.Q & pps_counter__temp_pcnt_5__i12.Q
       & pps_counter__temp_pcnt_5__i13.Q ; (1 pterm, 14 signals)
pps_counter__temp_pcnt_5__i14.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i14.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i15.T = pps_counter__temp_pcnt_5__i0.Q
       & pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i2.Q
       & pps_counter__temp_pcnt_5__i3.Q & pps_counter__temp_pcnt_5__i4.Q
       & pps_counter__temp_pcnt_5__i5.Q & pps_counter__temp_pcnt_5__i6.Q
       & pps_counter__temp_pcnt_5__i7.Q & pps_counter__temp_pcnt_5__i8.Q
       & pps_counter__temp_pcnt_5__i9.Q & pps_counter__temp_pcnt_5__i10.Q
       & pps_counter__temp_pcnt_5__i11.Q & pps_counter__temp_pcnt_5__i12.Q
       & pps_counter__temp_pcnt_5__i13.Q & pps_counter__temp_pcnt_5__i14.Q ; (1 pterm, 15 signals)
pps_counter__temp_pcnt_5__i15.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i15.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i16.T = pps_counter__temp_pcnt_5__i0.Q
       & pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i2.Q
       & pps_counter__temp_pcnt_5__i3.Q & pps_counter__temp_pcnt_5__i4.Q
       & pps_counter__temp_pcnt_5__i5.Q & pps_counter__temp_pcnt_5__i6.Q
       & pps_counter__temp_pcnt_5__i7.Q & pps_counter__temp_pcnt_5__i8.Q
       & pps_counter__temp_pcnt_5__i9.Q & pps_counter__temp_pcnt_5__i10.Q
       & pps_counter__temp_pcnt_5__i11.Q & pps_counter__temp_pcnt_5__i12.Q
       & pps_counter__temp_pcnt_5__i13.Q & pps_counter__temp_pcnt_5__i14.Q
       & pps_counter__temp_pcnt_5__i15.Q ; (1 pterm, 16 signals)
pps_counter__temp_pcnt_5__i16.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i16.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i17.T = pps_counter__temp_pcnt_5__i0.Q
       & pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i2.Q
       & pps_counter__temp_pcnt_5__i3.Q & pps_counter__temp_pcnt_5__i4.Q
       & pps_counter__temp_pcnt_5__i5.Q & pps_counter__temp_pcnt_5__i6.Q
       & pps_counter__temp_pcnt_5__i7.Q & pps_counter__temp_pcnt_5__i8.Q
       & pps_counter__temp_pcnt_5__i9.Q & pps_counter__temp_pcnt_5__i10.Q
       & pps_counter__temp_pcnt_5__i11.Q & pps_counter__temp_pcnt_5__i12.Q
       & pps_counter__temp_pcnt_5__i13.Q & pps_counter__temp_pcnt_5__i14.Q
       & pps_counter__temp_pcnt_5__i15.Q & pps_counter__temp_pcnt_5__i16.Q ; (1 pterm, 17 signals)
pps_counter__temp_pcnt_5__i17.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i17.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i18.T = pps_counter__temp_pcnt_5__i0.Q
       & pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i2.Q
       & pps_counter__temp_pcnt_5__i3.Q & pps_counter__temp_pcnt_5__i4.Q
       & pps_counter__temp_pcnt_5__i5.Q & pps_counter__temp_pcnt_5__i6.Q
       & pps_counter__temp_pcnt_5__i7.Q & pps_counter__temp_pcnt_5__i8.Q
       & pps_counter__temp_pcnt_5__i9.Q & pps_counter__temp_pcnt_5__i10.Q
       & pps_counter__temp_pcnt_5__i11.Q & pps_counter__temp_pcnt_5__i12.Q
       & pps_counter__temp_pcnt_5__i13.Q & pps_counter__temp_pcnt_5__i14.Q
       & pps_counter__temp_pcnt_5__i15.Q & pps_counter__temp_pcnt_5__i16.Q
       & pps_counter__temp_pcnt_5__i17.Q ; (1 pterm, 18 signals)
pps_counter__temp_pcnt_5__i18.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i18.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i19.T = pps_counter__temp_pcnt_5__i0.Q
       & pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i2.Q
       & pps_counter__temp_pcnt_5__i3.Q & pps_counter__temp_pcnt_5__i4.Q
       & pps_counter__temp_pcnt_5__i5.Q & pps_counter__temp_pcnt_5__i6.Q
       & pps_counter__temp_pcnt_5__i7.Q & pps_counter__temp_pcnt_5__i8.Q
       & pps_counter__temp_pcnt_5__i9.Q & pps_counter__temp_pcnt_5__i10.Q
       & pps_counter__temp_pcnt_5__i11.Q & pps_counter__temp_pcnt_5__i12.Q
       & pps_counter__temp_pcnt_5__i13.Q & pps_counter__temp_pcnt_5__i14.Q
       & pps_counter__temp_pcnt_5__i15.Q & pps_counter__temp_pcnt_5__i16.Q
       & pps_counter__temp_pcnt_5__i17.Q & pps_counter__temp_pcnt_5__i18.Q ; (1 pterm, 19 signals)
pps_counter__temp_pcnt_5__i19.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i19.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i2.D = pps_counter__temp_pcnt_5__i0.Q
       & pps_counter__temp_pcnt_5__i1.Q & !pps_counter__temp_pcnt_5__i2.Q
    # !pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i2.Q
    # !pps_counter__temp_pcnt_5__i0.Q & pps_counter__temp_pcnt_5__i2.Q ; (3 pterms, 3 signals)
pps_counter__temp_pcnt_5__i2.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i2.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i20.T = pps_counter__temp_pcnt_5__i0.Q
       & pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i2.Q
       & pps_counter__temp_pcnt_5__i3.Q & pps_counter__temp_pcnt_5__i4.Q
       & pps_counter__temp_pcnt_5__i5.Q & pps_counter__temp_pcnt_5__i6.Q
       & pps_counter__temp_pcnt_5__i7.Q & pps_counter__temp_pcnt_5__i8.Q
       & pps_counter__temp_pcnt_5__i9.Q & pps_counter__temp_pcnt_5__i10.Q
       & pps_counter__temp_pcnt_5__i11.Q & pps_counter__temp_pcnt_5__i12.Q
       & pps_counter__temp_pcnt_5__i13.Q & pps_counter__temp_pcnt_5__i14.Q
       & pps_counter__temp_pcnt_5__i15.Q & pps_counter__temp_pcnt_5__i16.Q
       & pps_counter__temp_pcnt_5__i17.Q & pps_counter__temp_pcnt_5__i18.Q
       & pps_counter__temp_pcnt_5__i19.Q ; (1 pterm, 20 signals)
pps_counter__temp_pcnt_5__i20.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i20.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i21.T = pps_counter__temp_pcnt_5__i0.Q
       & pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i2.Q
       & pps_counter__temp_pcnt_5__i3.Q & pps_counter__temp_pcnt_5__i4.Q
       & pps_counter__temp_pcnt_5__i5.Q & pps_counter__temp_pcnt_5__i6.Q
       & pps_counter__temp_pcnt_5__i7.Q & pps_counter__temp_pcnt_5__i8.Q
       & pps_counter__temp_pcnt_5__i9.Q & pps_counter__temp_pcnt_5__i10.Q
       & pps_counter__temp_pcnt_5__i11.Q & pps_counter__temp_pcnt_5__i12.Q
       & pps_counter__temp_pcnt_5__i13.Q & pps_counter__temp_pcnt_5__i14.Q
       & pps_counter__temp_pcnt_5__i15.Q & pps_counter__temp_pcnt_5__i16.Q
       & pps_counter__temp_pcnt_5__i17.Q & pps_counter__temp_pcnt_5__i18.Q
       & pps_counter__temp_pcnt_5__i19.Q & pps_counter__temp_pcnt_5__i20.Q ; (1 pterm, 21 signals)
pps_counter__temp_pcnt_5__i21.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i21.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i22.T = pps_counter__temp_pcnt_5__i0.Q
       & pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i2.Q
       & pps_counter__temp_pcnt_5__i3.Q & pps_counter__temp_pcnt_5__i4.Q
       & pps_counter__temp_pcnt_5__i5.Q & pps_counter__temp_pcnt_5__i6.Q
       & pps_counter__temp_pcnt_5__i7.Q & pps_counter__temp_pcnt_5__i8.Q
       & pps_counter__temp_pcnt_5__i9.Q & pps_counter__temp_pcnt_5__i10.Q
       & pps_counter__temp_pcnt_5__i11.Q & pps_counter__temp_pcnt_5__i12.Q
       & pps_counter__temp_pcnt_5__i13.Q & pps_counter__temp_pcnt_5__i14.Q
       & pps_counter__temp_pcnt_5__i15.Q & pps_counter__temp_pcnt_5__i16.Q
       & pps_counter__temp_pcnt_5__i17.Q & pps_counter__temp_pcnt_5__i18.Q
       & pps_counter__temp_pcnt_5__i19.Q & pps_counter__temp_pcnt_5__i20.Q
       & pps_counter__temp_pcnt_5__i21.Q ; (1 pterm, 22 signals)
pps_counter__temp_pcnt_5__i22.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i22.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i23.T = pps_counter__temp_pcnt_5__i0.Q
       & pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i2.Q
       & pps_counter__temp_pcnt_5__i3.Q & pps_counter__temp_pcnt_5__i4.Q
       & pps_counter__temp_pcnt_5__i5.Q & pps_counter__temp_pcnt_5__i6.Q
       & pps_counter__temp_pcnt_5__i7.Q & pps_counter__temp_pcnt_5__i8.Q
       & pps_counter__temp_pcnt_5__i9.Q & pps_counter__temp_pcnt_5__i10.Q
       & pps_counter__temp_pcnt_5__i11.Q & pps_counter__temp_pcnt_5__i12.Q
       & pps_counter__temp_pcnt_5__i13.Q & pps_counter__temp_pcnt_5__i14.Q
       & pps_counter__temp_pcnt_5__i15.Q & pps_counter__temp_pcnt_5__i16.Q
       & pps_counter__temp_pcnt_5__i17.Q & pps_counter__temp_pcnt_5__i18.Q
       & pps_counter__temp_pcnt_5__i19.Q & pps_counter__temp_pcnt_5__i20.Q
       & pps_counter__temp_pcnt_5__i21.Q & pps_counter__temp_pcnt_5__i22.Q ; (1 pterm, 23 signals)
pps_counter__temp_pcnt_5__i23.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i23.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i3.D = pps_counter__temp_pcnt_5__i0.Q
       & pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i2.Q
       & !pps_counter__temp_pcnt_5__i3.Q
    # !pps_counter__temp_pcnt_5__i2.Q & pps_counter__temp_pcnt_5__i3.Q
    # !pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i3.Q
    # !pps_counter__temp_pcnt_5__i0.Q & pps_counter__temp_pcnt_5__i3.Q ; (4 pterms, 4 signals)
pps_counter__temp_pcnt_5__i3.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i3.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i4.D.X1 = pps_counter__temp_pcnt_5__i0.Q
       & pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i2.Q
       & pps_counter__temp_pcnt_5__i3.Q ; (1 pterm, 4 signals)
pps_counter__temp_pcnt_5__i4.D.X2 = pps_counter__temp_pcnt_5__i4.Q ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i4.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i4.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i5.T = pps_counter__temp_pcnt_5__i0.Q
       & pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i2.Q
       & pps_counter__temp_pcnt_5__i3.Q & pps_counter__temp_pcnt_5__i4.Q ; (1 pterm, 5 signals)
pps_counter__temp_pcnt_5__i5.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i5.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i6.T = pps_counter__temp_pcnt_5__i0.Q
       & pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i2.Q
       & pps_counter__temp_pcnt_5__i3.Q & pps_counter__temp_pcnt_5__i4.Q
       & pps_counter__temp_pcnt_5__i5.Q ; (1 pterm, 6 signals)
pps_counter__temp_pcnt_5__i6.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i6.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i7.T = pps_counter__temp_pcnt_5__i0.Q
       & pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i2.Q
       & pps_counter__temp_pcnt_5__i3.Q & pps_counter__temp_pcnt_5__i4.Q
       & pps_counter__temp_pcnt_5__i5.Q & pps_counter__temp_pcnt_5__i6.Q ; (1 pterm, 7 signals)
pps_counter__temp_pcnt_5__i7.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i7.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i8.T = pps_counter__temp_pcnt_5__i0.Q
       & pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i2.Q
       & pps_counter__temp_pcnt_5__i3.Q & pps_counter__temp_pcnt_5__i4.Q
       & pps_counter__temp_pcnt_5__i5.Q & pps_counter__temp_pcnt_5__i6.Q
       & pps_counter__temp_pcnt_5__i7.Q ; (1 pterm, 8 signals)
pps_counter__temp_pcnt_5__i8.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i8.AR = !pps_rstn ; (1 pterm, 1 signal)

pps_counter__temp_pcnt_5__i9.T = pps_counter__temp_pcnt_5__i0.Q
       & pps_counter__temp_pcnt_5__i1.Q & pps_counter__temp_pcnt_5__i2.Q
       & pps_counter__temp_pcnt_5__i3.Q & pps_counter__temp_pcnt_5__i4.Q
       & pps_counter__temp_pcnt_5__i5.Q & pps_counter__temp_pcnt_5__i6.Q
       & pps_counter__temp_pcnt_5__i7.Q & pps_counter__temp_pcnt_5__i8.Q ; (1 pterm, 9 signals)
pps_counter__temp_pcnt_5__i9.C = rxd_1v8 ; (1 pterm, 1 signal)
pps_counter__temp_pcnt_5__i9.AR = !pps_rstn ; (1 pterm, 1 signal)

spi_clk = cpld_clk ; (1 pterm, 1 signal)

spi_module__spi_cntr_vPcnt_i0.D = pps_counter__temp_pcnt_5__i23.Q ; (1 pterm, 1 signal)
spi_module__spi_cntr_vPcnt_i0.C = !cpld_seln ; (1 pterm, 1 signal)

spi_mosi = cpld_sdi ; (1 pterm, 1 signal)




